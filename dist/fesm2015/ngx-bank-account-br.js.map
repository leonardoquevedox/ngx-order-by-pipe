{"version":3,"file":"ngx-bank-account-br.js.map","sources":["ng://ngx-bank-account-br/ngx-order-by.pipe.ts","ng://ngx-bank-account-br/ngx-order-by.module.ts"],"sourcesContent":["/**\n * @license MIT\n * @version 1.1.0\n * @author Leonardo Quevedo\n * @description Order by pipe.\n */\n\n/*\n * Example use\n *\t\tBasic Array of single type: *ngFor='let todo of todoService.todos | orderBy : '-''\n *\t\tMultidimensional Array Sort on single column: *ngFor='let todo of todoService.todos | orderBy : ['-status']'\n *\t\tMultidimensional Array Sort on multiple columns: *ngFor='let todo of todoService.todos | orderBy : ['status', '-title']'\n */\n\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n    name: 'orderBy',\n    pure: false\n})\nexport class NgxOrderByPipe implements PipeTransform {\n\n    private value: string[] = []\n    private iterations: number = 1\n    private HEALTHY_MAXIMUM_ITERATIONS_NUMBER = 200\n    private thePipeIsOverloadingTheView = false\n    private overloadWarningHasBeenShown = false\n\n    static _orderByComparator(a: any, b: any): number {\n\n        if (a === null || typeof a === 'undefined') a = 0\n        if (b === null || typeof b === 'undefined') b = 0\n\n        if (a instanceof Date && b instanceof Date) {\n            if (a < b) return -1\n            else if (a > b) return 1\n            else return 0\n        }\n\n        if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n\n            \n            if (a.toLowerCase() < b.toLowerCase()) return -1\n            if (a.toLowerCase() > b.toLowerCase()) return 1\n        } else {\n\n            \n            if (parseFloat(a) < parseFloat(b)) return -1\n            if (parseFloat(a) > parseFloat(b)) return 1\n\n        }\n\n        return 0 \n    }\n\n    transform(input: any, config: string = '+'): any {\n\n        \n        if (!input) return input\n\n        this.iterations++\n        this.thePipeIsOverloadingTheView = this.iterations > this.HEALTHY_MAXIMUM_ITERATIONS_NUMBER\n        if (this.thePipeIsOverloadingTheView && !this.overloadWarningHasBeenShown)\n            console.warn(NgxOrderByPipe.name + `: the change detection strategy is making the pipe run too many times in a row. \n            Please, consider changing it to ChangeStrategy.OnPush in order to make change detections only when necessary.`)\n\n        \n        this.value = [...input]\n        let value = this.value\n\n        if (!Array.isArray(value)) return value\n\n        if (!Array.isArray(config) || (Array.isArray(config) && config.length == 1)) {\n            let propertyToCheck: string = !Array.isArray(config) ? config : config[0]\n            let desc = propertyToCheck.substr(0, 1) == '-'\n\n            \n            if (!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+') {\n                return !desc ? value.sort() : value.sort().reverse()\n            }\n            else {\n                let property: string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\n                    ? propertyToCheck.substr(1)\n                    : propertyToCheck\n\n                return value.sort(function (a: any, b: any) {\n                    let aValue = a[property]\n                    let bValue = b[property]\n\n                    let propertySplit = property.split('.')\n\n                    if (typeof aValue === 'undefined' && typeof bValue === 'undefined' && propertySplit.length > 1) {\n                        aValue = a\n                        bValue = b\n                        for (let j = 0; j < propertySplit.length; j++) {\n                            aValue = aValue[propertySplit[j]]\n                            bValue = bValue[propertySplit[j]]\n                        }\n                    }\n\n                    return !desc\n                        ? NgxOrderByPipe._orderByComparator(aValue, bValue)\n                        : -NgxOrderByPipe._orderByComparator(aValue, bValue)\n                })\n            }\n        }\n        else {\n            \n            return value.sort(function (a: any, b: any) {\n                for (let i: number = 0; i < config.length; i++) {\n                    let desc = config[i].substr(0, 1) == '-'\n                    let property = config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\n                        ? config[i].substr(1)\n                        : config[i]\n\n                    let aValue = a[property]\n                    let bValue = b[property]\n\n                    let propertySplit = property.split('.')\n\n                    if (typeof aValue === 'undefined' && typeof bValue === 'undefined' && propertySplit.length > 1) {\n                        aValue = a\n                        bValue = b\n                        for (let j = 0; j < propertySplit.length; j++) {\n                            aValue = aValue[propertySplit[j]]\n                            bValue = bValue[propertySplit[j]]\n                        }\n                    }\n\n                    let comparison = !desc\n                        ? NgxOrderByPipe._orderByComparator(aValue, bValue)\n                        : -NgxOrderByPipe._orderByComparator(aValue, bValue)\n\n                    \n                    if (comparison != 0) return comparison\n                }\n\n                return 0 \n            })\n        }\n    }\n\n    order(input: any, orderBy: any = '+') {\n        return this.transform(input, orderBy)\n    }\n}\n\nexport let ORDERBY_PROVIDERS = [\n    NgxOrderByPipe\n]\n","/**\n * @license MIT\n * @author Leonardo Quevedo\n * @description Directive module.\n */\n\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { NgxOrderByPipe } from './ngx-order-by.pipe'\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [NgxOrderByPipe],\n    exports: [NgxOrderByPipe]\n})\nexport class NgxOrderByPipeModule { }"],"names":[],"mappings":"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"}
