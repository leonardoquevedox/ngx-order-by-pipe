!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-bank-account-br",["exports","@angular/common","@angular/core"],e):e(r["ngx-bank-account-br"]={},r.ng.common,r.ng.core)}(this,function(r,e,t){"use strict";function n(r,e){var t="function"==typeof Symbol&&r[Symbol.iterator];if(!t)return r;var o,n,a=t.call(r),i=[];try{for(;(void 0===e||0<e--)&&!(o=a.next()).done;)i.push(o.value)}catch(s){n={error:s}}finally{try{o&&!o.done&&(t=a["return"])&&t.call(a)}finally{if(n)throw n.error}}return i}var o=function(){function c(){this.value=[],this.iterations=1,this.HEALTHY_MAXIMUM_ITERATIONS_NUMBER=200,this.thePipeIsOverloadingTheView=!1,this.overloadWarningHasBeenShown=!1}return c._orderByComparator=function(r,e){if(null==r&&(r=0),null==e&&(e=0),r instanceof Date&&e instanceof Date)return r<e?-1:e<r?1:0;if(isNaN(parseFloat(r))||!isFinite(r)||isNaN(parseFloat(e))||!isFinite(e)){if(r.toLowerCase()<e.toLowerCase())return-1;if(r.toLowerCase()>e.toLowerCase())return 1}else{if(parseFloat(r)<parseFloat(e))return-1;if(parseFloat(r)>parseFloat(e))return 1}return 0},c.prototype.transform=function(r,f){if(void 0===f&&(f="+"),!r)return r;this.iterations++,this.thePipeIsOverloadingTheView=this.iterations>this.HEALTHY_MAXIMUM_ITERATIONS_NUMBER,this.thePipeIsOverloadingTheView&&!this.overloadWarningHasBeenShown&&console.warn(c.name+": the change detection strategy is making the pipe run too many times in a row. \n            Please, consider changing it to ChangeStrategy.OnPush in order to make change detections only when necessary."),this.value=function o(){for(var r=[],e=0;e<arguments.length;e++)r=r.concat(n(arguments[e]));return r}(r);var e=this.value;if(!Array.isArray(e))return e;if(!Array.isArray(f)||Array.isArray(f)&&1==f.length){var t=Array.isArray(f)?f[0]:f,i="-"==t.substr(0,1);if(t&&"-"!=t&&"+"!=t){var s="+"==t.substr(0,1)||"-"==t.substr(0,1)?t.substr(1):t;return e.sort(function(r,e){var t=r[s],o=e[s],n=s.split(".");if(void 0===t&&void 0===o&&1<n.length){t=r,o=e;for(var a=0;a<n.length;a++)t=t[n[a]],o=o[n[a]]}return i?-c._orderByComparator(t,o):c._orderByComparator(t,o)})}return i?e.sort().reverse():e.sort()}return e.sort(function(r,e){for(var t=0;t<f.length;t++){var o="-"==f[t].substr(0,1),n="+"==f[t].substr(0,1)||"-"==f[t].substr(0,1)?f[t].substr(1):f[t],a=r[n],i=e[n],s=n.split(".");if(void 0===a&&void 0===i&&1<s.length){a=r,i=e;for(var u=0;u<s.length;u++)a=a[s[u]],i=i[s[u]]}var l=o?-c._orderByComparator(a,i):c._orderByComparator(a,i);if(0!=l)return l}return 0})},c.prototype.order=function(r,e){return void 0===e&&(e="+"),this.transform(r,e)},c.decorators=[{type:t.Pipe,args:[{name:"orderBy",pure:!1}]}],c}(),a=function(){function r(){}return r.decorators=[{type:t.NgModule,args:[{imports:[e.CommonModule],declarations:[o],exports:[o]}]}],r}();r.NgxOrderByPipeModule=a,r.Éµa=o,Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-bank-account-br.umd.min.js.map